FOPRunXSLTExt

Produced by the Print and Page Layout Community Group at W3C.  See
http://www.w3.org/community/ppl/.

FOPRunXSLTExt is an (early) experiment in getting the area tree from
an XSL formatter run as the result of calling an XSLT extension
function in the same XSLT transform as will produce the "final" FO
tree to be output for formatting as human readable pages.

It was initially developed by Arved Sandstrom of MagicLamp Software
following discussion on the public-ppl@w3.org mailing list. Further
development now happens in the 'ppl' Mercurial repository at
https://dvcs.w3.org/hg/ppl, with questions and comments happening on
the public-ppl@w3.org mailing list.

FOPRunXSLTExt is written in Java and uses the Apache FOP XSL formatter
to produce the area trees.

INSTALLATION
============

Prerequisites:

1. Java runtime

2. Saxon 9.4 (or later) HE jar

3. FOP 1.0 XSL formatter.


Windows:

1. Get and install Java JRE

2. Get and install Saxon

   Saxon-HE is available from http://saxon.sourceforge.net/ as a
   Zip-encoded archive.  Download the Zip file and extract its
   contents onto your local disk.

3. Get and install FOP 1.0

   FOP distributions are available from
   http://xmlgraphics.apache.org/fop/download.html.  Download the
   binary distribution of FOP 1.0 and extract its contents onto your
   local disk.

4. Edit 'runsaxon9he_fop10.bat' so the line beginning "set SAXON=" has
   the correct path to the Saxon-HE jar file on your system and so the
   line beginning "set FOP_HOME=" has the correct path to the
   "fop-1.0" folder that you extracted from the FOP binary
   distribution.

5. In the same directory as 'runsaxon9he_fop10.bat', run the following
   command:

      runsaxon9he_fop10.bat example1.xml example1_saxon9_fop10.xsl out/example1_saxon9_fop10.if out example1_saxon9_fop10.if


Linux/Unix:

1. This extension is designed to be compiled against FOP 1.0.

2. Because of the code the saxon9he.jar must be included always; if compiling for Xalan make sure that the Xalan JARs
are first in order, other way around for Saxon. The errors will alert you when you run the extension.

EXAMPLES
========

Example 1 - Area tree
---------------------

Produces an area tree in 'out/example1_saxon9_fop10.at'.

Windows:

runsaxon9he_fop10.bat example1.xml example1_saxon9_fop10.xsl out/example1_saxon9_fop10.if out example1_saxon9_fop10.at

Linux/Mac:

./runsaxon9he_fop10.sh example1.xml example1_saxon9_fop10.xsl out/example1_saxon9_fop10.url out example1_saxon9_fop10.at

./runxalan_fop10.sh example1.xml example1_xalan_fop10.xsl out/example1_xalan_fop10.url out example1_xalan_fop10.at


Example 3 - Rotate wide block
-----------------------------

Rotates a fixed-size box if it is too wide for the page.

The <box> element in 'example3.xml' specifies its formatted height and
width:

   <box id="box001" width="8in" height="5in">

With those dimensions, if you transform 'example3.xml' with
'formatting.xsl' and format the result, the box is wider than the
width of the page and some of the text is lost.

If you transform 'example3.xml' with 'example3_saxon9_fop10.xsl',
which uses the extension function to make an area tree during the
transform and makes decisions based on formatted areas, the box is
rotated when it is too wide for the page.

Run the example using one of the command lines below then then run an
XSL formatter on 'out/example3_saxon9_fop10.fo' to see the result.

You can change the box/@width value in 'example3.xml' and run it again
to see whether or not the box is rotated.

Windows:

runsaxon9he_fop10.bat example3.xml example3_saxon9_fop10.xsl out/example3_saxon9_fop10.fo out example3_saxon9_fop10.at

Linux/Mac:

./runsaxon9he_fop10.sh example3.xml example3_saxon9_fop10.xsl out/example3_saxon9_fop10.fo out example3_saxon9_fop10.at
